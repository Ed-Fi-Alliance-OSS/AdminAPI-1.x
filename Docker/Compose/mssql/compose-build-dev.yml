# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: "3.8"

services:
  db-ods:
    build:
      context: ../../Settings/DB-Ods/mssql/
      dockerfile: Dockerfile
      args:
        ODS_VERSION: ${MSSQL_ODS_MINIMAL_VERSION:-7.1.776}
        STANDARD_VERSION: ${STANDARD_VERSION:-5.0.0}
    environment:
      ACCEPT_EULA: "Y"
      SQLSERVER_USER: ${SQLSERVER_USER:-edfi}
      SQLSERVER_PASSWORD: ${SQLSERVER_PASSWORD:-P@55w0rd}
      MSSQL_PID: ${MSSQL_PID:-Express}
    volumes:
      - vol-db-ods-adminapi:/var/opt/mssql/data
      - vol-db-ods-adminapi:/var/opt/mssql/log
    restart: always
    container_name: ed-fi-db-ods
    hostname: ed-fi-db-ods
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -U ${SQLSERVER_USER:-edfi} -P "${SQLSERVER_PASSWORD:-P@55w0rd}" -C -Q "SELECT 1"
      start_period: "60s"
      retries: 3

  nginx:
    build:
      context: ../../Settings/gateway/
      dockerfile: Dockerfile
    environment:
      ADMIN_API_VIRTUAL_NAME: "${ADMIN_API_VIRTUAL_NAME:-adminapi}"
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
    ports:
      - "443:443"
      - "80:80"
    container_name: ed-fi-gateway-adminapi
    restart: always
    hostname: nginx
    volumes:
      - ../../Settings/ssl:/ssl/
    depends_on:
      - adminapi
      - api

  api:
    image: edfialliance/ods-api-web-api-mssql:pre-6x
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-P@55w0rd}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      ODS_POSTGRES_HOST: db-ods
      ADMIN_POSTGRES_HOST: pb-admin
      API_MODE: "SharedInstance"
      ApiSettings__PathBase: "${ODS_VIRTUAL_NAME:-api}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
    depends_on:
      - db-ods
      - db-admin
    restart: always
    hostname: webapi
    container_name: ed-fi-ods-api-adminapi

  adminapi:
    build:
      # Important to set the context to the root, rather than setting it to the
      # EdFi.Ods.AdminApi directory, so that the Dockerfile has access to other
      # C# projects.
      context: ../../
      additional_contexts:
         assets: ../../../
      dockerfile: dev.mssql.Dockerfile
    environment:
      ADMIN_MSSQL_HOST: db-admin
      SQLSERVER_ADMIN_DATASOURCE: db-admin
      SQLSERVER_SECURITY_DATASOURCE: db-admin
      SQLSERVER_ODS_DATASOURCE: db-admin
      SQLSERVER_PORT: 1433
      SQLSERVER_USER: ${SQLSERVER_USER:-edfi}
      SQLSERVER_PASSWORD: "${SQLSERVER_PASSWORD:-P@55w0rd}"
      DATABASEENGINE: "SqlServer"
      API_MODE: ${API_MODE}
      AUTHORITY: ${AUTHORITY}
      ISSUER_URL: ${ISSUER_URL}
      SIGNING_KEY: ${SIGNING_KEY}
      ADMIN_API_VIRTUAL_NAME: ${ADMIN_API_VIRTUAL_NAME:-adminapi}
      ODS_API_VERSION: ${ODS_API_VERSION}
    depends_on:
      - db-admin
    restart: always
    hostname: ${ADMIN_API_VIRTUAL_NAME:-adminapi}
    container_name: adminapi
    healthcheck:
      test: ${ADMIN_API_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  db-admin:
    build:
      context: ../../
      dockerfile: "db.mssql.admin.Dockerfile"
    environment:
      SA_PASSWORD: "${SA_PASSWORD:-P@55w0rd}"
      ACCEPT_EULA: "Y"
      SQLSERVER_ADMIN_DATASOURCE: db-admin
      SQLSERVER_ODS_DATASOURCE: db-admin
      SQLSERVER_PORT: 1433
      SQLSERVER_USER: ${SQLSERVER_USER:-edfi}
      SQLSERVER_PASSWORD: "${SQLSERVER_PASSWORD:-P@55w0rd}"
    ports:
      - 1433:1433
    volumes:
      - vol-db-admin-adminapi:/var/lib/mssql/data
    restart: always
    container_name: ed-fi-db-admin-adminapi

volumes:
  vol-db-admin-adminapi:
    driver: local
    name: vol-db-admin-adminapi
  vol-db-ods-adminapi:
    driver: local
    name: vol-db-ods-adminapi

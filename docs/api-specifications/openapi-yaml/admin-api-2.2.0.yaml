openapi: 3.0.1
info:
  version: 2.2.0
  description: The Ed-Fi Admin API is a REST API-based administrative interface for managing vendors, applications, client credentials, and authorization rules for accessing an Ed-Fi API.
paths:
  /v2/resourceClaims:
    get:
      tags:
        - ResourceClaims
      summary: Retrieves all resourceClaims.
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resourceClaim'
  '/v2/resourceClaims/{id}':
    get:
      tags:
        - ResourceClaims
      summary: Retrieves a specific resourceClaim based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceClaim'
  /v2/vendors:
    get:
      tags:
        - Vendors
      summary: Retrieves all vendors.
      parameters:
        - name: offset
          in: query
          description: Indicates how many items should be skipped before returning results.
          required: true
          schema:
            type: integer
            format: int32
            default: '0'
        - name: limit
          in: query
          description: Indicates the maximum number of items that should be returned in the results.
          required: true
          schema:
            type: integer
            format: int32
            default: '25'
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/vendor'
    post:
      tags:
        - Vendors
      summary: Creates vendor based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addVendorRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  '/v2/vendors/{id}':
    get:
      tags:
        - Vendors
      summary: Retrieves a specific vendor based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vendor'
    put:
      tags:
        - Vendors
      summary: Updates vendor based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editVendorRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
    delete:
      tags:
        - Vendors
      summary: Deletes an existing vendor using the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Resource was successfully deleted.
  /v2/profiles:
    get:
      tags:
        - Profiles
      summary: Retrieves all profiles.
      parameters:
        - name: offset
          in: query
          description: Indicates how many items should be skipped before returning results.
          required: true
          schema:
            type: integer
            format: int32
            default: '0'
        - name: limit
          in: query
          description: Indicates the maximum number of items that should be returned in the results.
          required: true
          schema:
            type: integer
            format: int32
            default: '25'
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/profile'
    post:
      tags:
        - Profiles
      summary: Creates profile based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addProfileRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  '/v2/profiles/{id}':
    get:
      tags:
        - Profiles
      summary: Retrieves a specific profile based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileDetails'
    put:
      tags:
        - Profiles
      summary: Updates profile based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editProfileRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
    delete:
      tags:
        - Profiles
      summary: Deletes an existing profile using the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Resource was successfully deleted.
  /v2/odsInstances:
    get:
      tags:
        - OdsInstances
      summary: Retrieves all odsInstances.
      parameters:
        - name: offset
          in: query
          description: Indicates how many items should be skipped before returning results.
          required: true
          schema:
            type: integer
            format: int32
            default: '0'
        - name: limit
          in: query
          description: Indicates the maximum number of items that should be returned in the results.
          required: true
          schema:
            type: integer
            format: int32
            default: '25'
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:

                type: array
                items:
                  $ref: '#/components/schemas/odsInstance'
    post:
      tags:
        - OdsInstances
      summary: Creates odsInstance based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addOdsIntanceRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  '/v2/odsInstances/{id}':
    get:
      tags:
        - OdsInstances
      summary: Retrieves a specific odsInstance based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odsInstanceDetail'
    put:
      tags:
        - OdsInstances
      summary: Updates odsInstance based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editOdsInstanceRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
    delete:
      tags:
        - OdsInstances
      summary: Deletes an existing odsInstance using the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Resource was successfully deleted.
  /v2/odsInstanceDerivatives:
    get:
      tags:
        - OdsInstanceDerivatives
      summary: Retrieves all odsInstanceDerivatives.
      parameters:
        - name: offset
          in: query
          description: Indicates how many items should be skipped before returning results.
          required: true
          schema:
            type: integer
            format: int32
            default: '0'
        - name: limit
          in: query
          description: Indicates the maximum number of items that should be returned in the results.
          required: true
          schema:
            type: integer
            format: int32
            default: '25'
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:

                type: array
                items:
                  $ref: '#/components/schemas/odsInstanceDerivative'
    post:
      tags:
        - OdsInstanceDerivatives
      summary: Creates odsInstanceDerivative based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addOdsInstanceDerivateRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  '/v2/odsInstanceDerivatives/{id}':
    get:
      tags:
        - OdsInstanceDerivatives
      summary: Retrieves a specific odsInstanceDerivative based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odsInstanceDerivative'
    put:
      tags:
        - OdsInstanceDerivatives
      summary: Updates odsInstanceDerivative based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editOdsInstanceDerivateRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
    delete:
      tags:
        - OdsInstanceDerivatives
      summary: Deletes an existing odsInstanceDerivative using the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Resource was successfully deleted.
  /v2/odsInstanceContexts:
    get:
      tags:
        - OdsInstanceContexts
      summary: Retrieves all odsInstanceContexts.
      parameters:
        - name: offset
          in: query
          description: Indicates how many items should be skipped before returning results.
          required: true
          schema:
            type: integer
            format: int32
            default: '0'
        - name: limit
          in: query
          description: Indicates the maximum number of items that should be returned in the results.
          required: true
          schema:
            type: integer
            format: int32
            default: '25'
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:

                type: array
                items:
                  $ref: '#/components/schemas/odsInstanceContext'
    post:
      tags:
        - OdsInstanceContexts
      summary: Creates odsInstanceContext based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addOdsInstanceContextRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  '/v2/odsInstanceContexts/{id}':
    get:
      tags:
        - OdsInstanceContexts
      summary: Retrieves a specific odsInstanceContext based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odsInstanceContext'
    put:
      tags:
        - OdsInstanceContexts
      summary: Updates odsInstanceContext based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editOdsInstanceContextRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
    delete:
      tags:
        - OdsInstanceContexts
      summary: Deletes an existing odsInstanceContext using the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Resource was successfully deleted.
  '/v2/claimSets/{id}/export':
    get:
      tags:
        - ClaimSets
      summary: Retrieves a specific claimSet based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/claimsetWithResources'
  /v2/claimSets:
    get:
      tags:
        - ClaimSets
      summary: Retrieves all claimSets.
      parameters:
        - name: offset
          in: query
          description: Indicates how many items should be skipped before returning results.
          required: true
          schema:
            type: integer
            format: int32
            default: '0'
        - name: limit
          in: query
          description: Indicates the maximum number of items that should be returned in the results.
          required: true
          schema:
            type: integer
            format: int32
            default: '25'
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/claimset'
    post:
      tags:
        - ClaimSets
      summary: Creates claimSet based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addClaimsetRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  '/v2/claimSets/{id}':
    get:
      tags:
        - ClaimSets
      summary: Retrieves a specific claimSet based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/claimsetWithResources'
    put:
      tags:
        - ClaimSets
      summary: Updates claimSet based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editClaimsetRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
    delete:
      tags:
        - ClaimSets
      summary: Deletes an existing claimSet using the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Resource was successfully deleted.
  /v2/authorizationStrategies:
    get:
      tags:
        - AuthorizationStrategies
      summary: Retrieves all authorizationStrategies.
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/authotizationStrategy'
  /v2/applications:
    get:
      tags:
        - Applications
      summary: Retrieves all applications.
      parameters:
        - name: offset
          in: query
          description: Indicates how many items should be skipped before returning results.
          required: true
          schema:
            type: integer
            format: int32
            default: '0'
        - name: limit
          in: query
          description: Indicates the maximum number of items that should be returned in the results.
          required: true
          schema:
            type: integer
            format: int32
            default: '25'
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:

                type: array
                items:
                  $ref: '#/components/schemas/application'
    post:
      tags:
        - Applications
      summary: Creates application based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addApplicationRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationResult'
  '/v2/applications/{id}':
    get:
      tags:
        - Applications
      summary: Retrieves a specific application based on the identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
    put:
      tags:
        - Applications
      summary: Updates application based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editApplicationResult'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
    delete:
      tags:
        - Applications
      summary: Deletes an existing application using the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Resource was successfully deleted.
  '/v2/odsInstances/{id}/applications':
    get:
      tags:
        - OdsInstances
      summary: Retrieves applications assigned to a specific ODS instance based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
  '/v2/vendors/{id}/applications':
    get:
      tags:
        - Vendors
      summary: Retrieves applications assigned to a specific vendor based on the resource identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
  /v2/actions:
    get:
      tags:
        - Actions
      summary: Retrieves all actions.
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/action'
  /:
    get:
      tags:
        - Information
      summary: Retrieve API informational metadata
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/information'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/information'
  /v2/claimSets/copy:
    post:
      tags:
        - ClaimSets
      summary: Creates claimSet based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/copyClaimsetRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  /v2/claimSets/import:
    post:
      tags:
        - ClaimSets
      summary: Creates claimSet based on the supplied values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importClaimsetRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  '/v2/claimSets/{claimSetId}/resourceClaimActions/{resourceClaimId}/overrideAuthorizationStrategy':
    post:
      tags:
        - ClaimSets
      summary: Creates claimSet based on the supplied values.
      parameters:
        - name: claimSetId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: resourceClaimId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/overrideAuthorizationStrategyOnClaimsetRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
  '/v2/claimSets/{claimSetId}/resourceClaimActions/{resourceClaimId}/resetAuthorizationStrategies':
    post:
      tags:
        - ClaimSets
      summary: Creates claimSet based on the supplied values.
      parameters:
        - name: claimSetId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: resourceClaimId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
  '/v2/claimSets/{claimSetId}/resourceClaimActions':
    post:
      tags:
        - ClaimSets
      summary: Creates claimSet based on the supplied values.
      parameters:
        - name: claimSetId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addResourceClaimActionsOnClaimsetRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '201':
          description: Created
  /connect/register:
    post:
      tags:
        - Connect
      summary: Registers new client
      description: Registers new client
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClientId:
                  type: string
                  description: Client id
                ClientSecret:
                  type: string
                  description: Client secret
                DisplayName:
                  type: string
                  description: Client display name
            encoding:
              ClientId:
                style: form
              ClientSecret:
                style: form
              DisplayName:
                style: form
      responses:
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Application registered successfully.
  /connect/token:
    post:
      tags:
        - Connect
      summary: Retrieves bearer token
      description: "\nTo authenticate Swagger requests, execute using \"Authorize\" above, not \"Try It Out\" here."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                client_secret:
                  type: string
                grant_type:
                  type: string
                scope:
                  type: string
      responses:
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Sign-in successful.
  '/v2/claimSets/{claimSetId}/resourceClaimActions/{resourceClaimId}':
    put:
      tags:
        - ClaimSets
      summary: Updates claimSet based on the resource identifier.
      parameters:
        - name: claimSetId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: resourceClaimId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editResourceClaimActionsOnClaimsetRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
    delete:
      tags:
        - ClaimSets
      summary: Deletes an existing claimSet using the resource identifier.
      parameters:
        - name: claimSetId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: resourceClaimId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: Success
  '/v2/applications/{id}/reset-credential':
    put:
      tags:
        - Applications
      summary: Reset application credentials. Returns new key and secret.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '404':
          description: Not found. A resource with given identifier could not be found.
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationResult'
components:
  schemas:
    action:
      title: Action
      required:
        - id
        - name
        - uri
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
      additionalProperties: false
    adminApiError:
      title: AdminApiError
      required:
        - errors
        - title
      type: object
      properties:
        title:
          type: string
          nullable: true
          readOnly: true
        errors:
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      description: Wrapper schema for all error responses
    addApplicationRequest:
      title: AddApplicationRequest
      required:
        - applicationName
        - claimSetName
        - educationOrganizationIds
        - odsInstanceIds
        - vendorId
      type: object
      properties:
        applicationName:
          type: string
          description: Application name
        vendorId:
          type: integer
          description: Vendor/ company id
          format: int32
        claimSetName:
          type: string
          description: Claim set name
        profileIds:
          type: array
          items:
            type: integer
            format: int32
          description: Profile id
          nullable: true
        educationOrganizationIds:
          type: array
          items:
            type: integer
            format: int32
          description: Education organization ids
        odsInstanceIds:
          type: array
          items:
            type: integer
            format: int32
          description: List of ODS instance id
      additionalProperties: false
    application:
      title: Application
      required:
        - applicationName
        - claimSetName
        - educationOrganizationIds
        - id
        - odsInstanceIds
        - profileIds
        - vendorId
      type: object
      properties:
        id:
          type: integer
          format: int32
        applicationName:
          type: string
          nullable: true
        claimSetName:
          type: string
          nullable: true
        educationOrganizationIds:
          required:
            - item
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        vendorId:
          type: integer
          format: int32
          nullable: true
        profileIds:
          required:
            - item
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        odsInstanceIds:
          required:
            - item
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    applicationResult:
      title: ApplicationKeySecret
      required:
        - id
        - key
        - secret
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        secret:
          type: string
          nullable: true
      additionalProperties: false
    editApplicationResult:
      title: EditApplicationRequest
      required:
        - applicationName
        - claimSetName
        - educationOrganizationIds
        - id
        - odsInstanceIds
        - vendorId
      type: object
      properties:
        applicationName:
          type: string
          description: Application name
        vendorId:
          type: integer
          description: Vendor/ company id
          format: int32
        claimSetName:
          type: string
          description: Claim set name
        profileIds:
          type: array
          items:
            type: integer
            format: int32
          description: Profile id
          nullable: true
        educationOrganizationIds:
          type: array
          items:
            type: integer
            format: int32
          description: Education organization ids
        odsInstanceIds:
          type: array
          items:
            type: integer
            format: int32
          description: List of ODS instance id
      additionalProperties: false
    simpleApplication:
      title: Application
      required:
        - applicationName
      type: object
      properties:
        applicationName:
          type: string
          nullable: true
      additionalProperties: false
    authotizationStrategy:
      title: AuthorizationStrategy
      required:
        - authStrategyId
        - authStrategyName
        - displayName
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    addClaimsetRequest:
      title: AddClaimSetRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Claim set name
      additionalProperties: false
    claimsetResourceClaim:
      title: ClaimSetResourceClaim
      required:
        - actions
        - authorizationStrategyOverridesForCRUD
        - children
        - defaultAuthorizationStrategiesForCRUD
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
          nullable: true
        actions:
          type: array
          items:
            $ref: '#/components/schemas/resourceClaimAction'
          nullable: true
        _defaultAuthorizationStrategiesForCRUD:
          type: array
          items:
            $ref: '#/components/schemas/claimsetResourceClaimActionAuthorizationStrategies'
          nullable: true
          readOnly: true
        authorizationStrategyOverridesForCRUD:
          type: array
          items:
            $ref: '#/components/schemas/claimsetResourceClaimActionAuthorizationStrategies'
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/claimsetResourcesClaim'
          description: Children are collection of ResourceClaim
          nullable: true
      additionalProperties: false
    claimsetWithResources:
      title: ClaimSetWithResources
      required:
        - applications
        - id
        - isSystemReserved
        - name
        - resourceClaims
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        _isSystemReserved:
          type: boolean
          readOnly: true
        _applications:
          type: array
          items:
            $ref: '#/components/schemas/simpleApplication'
          nullable: true
          readOnly: true
        resourceClaims:
          type: array
          items:
            $ref: '#/components/schemas/claimsetResourcesClaim'
          nullable: true
      additionalProperties: false
    claimset:
      title: ClaimSet
      required:
        - applications
        - id
        - isSystemReserved
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        _isSystemReserved:
          type: boolean
          readOnly: true
        _applications:
          type: array
          items:
            $ref: '#/components/schemas/simpleApplication'
          nullable: true
          readOnly: true
      additionalProperties: false
    claimsetResourcesClaim:
      title: ClaimSetResourceClaim
      required:
        - actions
        - authorizationStrategyOverridesForCRUD
        - children
        - defaultAuthorizationStrategiesForCRUD
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
          nullable: true
        actions:
          type: array
          items:
            $ref: '#/components/schemas/resourceClaimAction'
          nullable: true
        _defaultAuthorizationStrategiesForCRUD:
          type: array
          items:
            $ref: '#/components/schemas/claimsetResourceClaimActionAuthorizationStrategies'
          nullable: true
          readOnly: true
        authorizationStrategyOverridesForCRUD:
          type: array
          items:
            $ref: '#/components/schemas/claimsetResourceClaimActionAuthorizationStrategies'
          nullable: true
        children:

          type: array
          items:
            $ref: '#/components/schemas/claimsetResourceClaim'
          description: Children are collection of ResourceClaim
          nullable: true
      additionalProperties: false
    copyClaimsetRequest:
      title: CopyClaimSetRequest
      required:
        - name
        - originalId
      type: object
      properties:
        originalId:
          type: integer
          description: ClaimSet id to copy
          format: int32
        name:
          type: string
          description: New claimset name
      additionalProperties: false
    editClaimsetRequest:
      title: EditClaimSetRequest
      required:
        - id
        - name
      type: object
      properties:
        name:
          type: string
          description: Claim set name
      additionalProperties: false
    importClaimsetRequest:
      title: ImportClaimSetRequest
      required:
        - name
        - resourceClaims
      type: object
      properties:
        name:
          type: string
          description: Claim set name
        resourceClaims:
          type: array
          items:
            $ref: '#/components/schemas/claimsetResourcesClaim'
          description: Resource Claims
      additionalProperties: false
    resourceClaim:
      title: ResourceClaimModel
      required:
        - children
        - id
        - name
        - parentId
        - parentName
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        parentId:
          type: integer
          format: int32
          nullable: true
        parentName:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/resourceClaim'
          description: Children are collection of SimpleResourceClaimModel
          nullable: true
      additionalProperties: false
    overrideAuthorizationStrategyOnClaimsetRequest:
      title: OverrideAuthStategyOnClaimSetRequest
      required:
        - actionName
        - authorizationStrategies
        - authStrategyIds
        - claimSetId
        - resourceClaimId
      type: object
      properties:
        actionName:
          type: string
          nullable: true
        authorizationStrategies:
          type: array
          items:
            type: string
          description: AuthorizationStrategy Names
      additionalProperties: false
    addResourceClaimActionsOnClaimsetRequest:
      title: AddResourceClaimActionsOnClaimSetRequest
      required:
        - claimSetId
        - resourceClaimActions
        - resourceClaimId
      type: object
      properties:
        resourceClaimId:
          type: integer
          description: ResourceClaim id
          format: int32
        resourceClaimActions:
          type: array
          items:
            $ref: '#/components/schemas/resourceClaimAction'
      additionalProperties: false
    editResourceClaimActionsOnClaimsetRequest:
      title: EditResourceClaimActionsOnClaimSetRequest
      required:
        - claimSetId
        - resourceClaimActions
        - resourceClaimId
      type: object
      properties:
        resourceClaimActions:
          type: array
          items:
            $ref: '#/components/schemas/resourceClaimAction'
      additionalProperties: false
    registeClientRequest:
      title: RegisterClientRequest
      required:
        - clientId
        - clientSecret
        - displayName
      type: object
      properties:
        clientId:
          type: string
          description: Client id
        clientSecret:
          type: string
          description: Client secret
        displayName:
          type: string
          description: Client display name
      additionalProperties: false
    information:
      title: Information
      required:
        - build
        - version
      type: object
      properties:
        version:
          type: string
          description: Application version
        build:
          type: string
          description: Build / release version
      additionalProperties: false
    odsInstanceDetail:
      title: OdsInstanceDetail
      required:
        - instanceType
        - name
        - odsInstanceContexts
        - odsInstanceDerivatives
        - odsInstanceId
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        instanceType:
          type: string
          nullable: true
        odsInstanceContexts:
          type: array
          items:
            $ref: '#/components/schemas/odsInstanceContext'
          nullable: true
        odsInstanceDerivatives:
          type: array
          items:
            $ref: '#/components/schemas/odsInstanceDerivative'
          nullable: true
      additionalProperties: false
    odsInstance:
      title: OdsInstance
      required:
        - instanceType
        - name
        - odsInstanceId
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        instanceType:
          type: string
          nullable: true
      additionalProperties: false
    addOdsInstanceContextRequest:
      title: AddOdsInstanceContextRequest
      required:
        - contextKey
        - contextValue
        - odsInstanceId
      type: object
      properties:
        odsInstanceId:
          type: integer
          description: ODS instance context ODS instance id.
          format: int32
        contextKey:
          type: string
          description: context key.
        contextValue:
          type: string
          description: context value.
      additionalProperties: false
    editOdsInstanceContextRequest:
      title: EditOdsInstanceContextRequest
      required:
        - contextKey
        - contextValue
        - id
        - odsInstanceId
      type: object
      properties:
        odsInstanceId:
          type: integer
          description: ODS instance context ODS instance id.
          format: int32
        contextKey:
          type: string
          description: context key.
        contextValue:
          type: string
          description: context value.
      additionalProperties: false
    odsInstanceContext:
      title: OdsInstanceContext
      required:
        - contextKey
        - contextValue
        - odsInstanceContextId
        - odsInstanceId
      type: object
      properties:
        id:
          type: integer
          format: int32
        odsInstanceId:
          type: integer
          format: int32
        contextKey:
          type: string
          nullable: true
        contextValue:
          type: string
          nullable: true
      additionalProperties: false
    addOdsInstanceDerivateRequest:
      title: AddOdsInstanceDerivativeRequest
      required:
        - connectionString
        - derivativeType
        - odsInstanceId
      type: object
      properties:
        odsInstanceId:
          type: integer
          description: ODS instance derivative ODS instance id.
          format: int32
        derivativeType:
          type: string
          description: derivative type.
        connectionString:
          type: string
          description: connection string.
      additionalProperties: false
    editOdsInstanceDerivateRequest:
      title: EditOdsInstanceDerivativeRequest
      required:
        - connectionString
        - derivativeType
        - id
        - odsInstanceId
      type: object
      properties:
        odsInstanceId:
          type: integer
          description: ODS instance derivative ODS instance id.
          format: int32
        derivativeType:
          type: string
          description: derivative type.
        connectionString:
          type: string
          description: connection string.
      additionalProperties: false
    odsInstanceDerivative:
      title: OdsInstanceDerivative
      required:
        - derivativeType
        - id
        - odsInstanceId
      type: object
      properties:
        id:
          type: integer
          format: int32
        odsInstanceId:
          type: integer
          format: int32
          nullable: true
        derivativeType:
          type: string
          nullable: true
      additionalProperties: false
    addOdsIntanceRequest:
      title: AddOdsInstanceRequest
      required:
        - connectionString
        - instanceType
        - name
      type: object
      properties:
        name:
          type: string
          description: Ods Instance name
        instanceType:
          type: string
          description: Ods Instance type
        connectionString:
          type: string
          description: Ods Instance connection string
      additionalProperties: false
    editOdsInstanceRequest:
      title: EditOdsInstanceRequest
      required:
        - connectionString
        - id
        - instanceType
        - name
      type: object
      properties:
        name:
          type: string
          description: Ods Instance name
        instanceType:
          type: string
          description: Ods Instance type
        connectionString:
          type: string
          description: Ods Instance connection string
          nullable: true
      additionalProperties: false
    addProfileRequest:
      title: AddProfileRequest
      required:
        - definition
        - name
      type: object
      properties:
        name:
          type: string
          description: Profile name
        definition:
          type: string
          description: Profile definition
      additionalProperties: false
      example: "{\r\n  \"name\": \"Test-Profile\",\r\n  \"definition\": \"<Profile name=\\\"Test-Profile\\\"><Resource name=\\\"Resource1\\\"><ReadContentType memberSelection=\\\"IncludeOnly\\\"><Collection name=\\\"Collection1\\\" memberSelection=\\\"IncludeOnly\\\"><Property name=\\\"Property1\\\" /><Property name=\\\"Property2\\\" /></Collection></ReadContentType><WriteContentType memberSelection=\\\"IncludeOnly\\\"><Collection name=\\\"Collection2\\\" memberSelection=\\\"IncludeOnly\\\"><Property name=\\\"Property1\\\" /><Property name=\\\"Property2\\\" /></Collection></WriteContentType></Resource></Profile>\"\r\n}"
    editProfileRequest:
      title: EditProfileRequest
      required:
        - definition
        - id
        - name
      type: object
      properties:
        name:
          type: string
          description: Profile name
        definition:
          type: string
          description: Profile definition
      additionalProperties: false
      example: "{\r\n  \"name\": \"Test-Profile\",\r\n  \"definition\": \"<Profile name=\\\"Test-Profile\\\"><Resource name=\\\"Resource1\\\"><ReadContentType memberSelection=\\\"IncludeOnly\\\"><Collection name=\\\"Collection1\\\" memberSelection=\\\"IncludeOnly\\\"><Property name=\\\"Property1\\\" /><Property name=\\\"Property2\\\" /></Collection></ReadContentType><WriteContentType memberSelection=\\\"IncludeOnly\\\"><Collection name=\\\"Collection2\\\" memberSelection=\\\"IncludeOnly\\\"><Property name=\\\"Property1\\\" /><Property name=\\\"Property2\\\" /></Collection></WriteContentType></Resource></Profile>\"\r\n}"
    profileDetails:
      title: ProfileDetails
      required:
        - definition
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        definition:
          type: string
          nullable: true
      additionalProperties: false
    profile:
      title: Profile
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    addVendorRequest:
      title: AddVendorRequest
      required:
        - company
        - contactEmailAddress
        - contactName
        - namespacePrefixes
      type: object
      properties:
        company:
          type: string
          description: Vendor/ company name
        namespacePrefixes:
          type: string
          description: Namespace prefix for the vendor. Multiple namespace prefixes can be provided as comma separated list if required.
        contactName:
          type: string
          description: Vendor contact name
        contactEmailAddress:
          type: string
          description: Vendor contact email id
      additionalProperties: false
    editVendorRequest:
      title: EditVendorRequest
      required:
        - company
        - contactEmailAddress
        - contactName
        - id
        - namespacePrefixes
      type: object
      properties:
        company:
          type: string
          description: Vendor/ company name
        namespacePrefixes:
          type: string
          description: Namespace prefix for the vendor. Multiple namespace prefixes can be provided as comma separated list if required.
        contactName:
          type: string
          description: Vendor contact name
        contactEmailAddress:
          type: string
          description: Vendor contact email id
      additionalProperties: false
    vendor:
      title: Vendor
      required:
        - company
        - contactEmailAddress
        - contactName
        - id
        - namespacePrefixes
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        company:
          type: string
          nullable: true
        namespacePrefixes:
          type: string
          nullable: true
        contactName:
          type: string
          nullable: true
        contactEmailAddress:
          type: string
          nullable: true
      additionalProperties: false
    resourceClaimAuthorizationStrategy:
      title: ResourceClaimAuthorizationStrategy
      required:
        - authStrategyId
        - authStrategyName
        - isInheritedFromParent
      type: object
      properties:
        authStrategyId:
          type: integer
          format: int32
        authStrategyName:
          type: string
          nullable: true
        isInheritedFromParent:
          type: boolean
      additionalProperties: false
    claimsetResourceClaimActionAuthorizationStrategies:
      title: ClaimSetResourceClaimActionAuthorizationStrategies
      required:
        - actionId
        - actionName
        - authorizationStrategies
      type: object
      properties:
        actionId:
          type: integer
          format: int32
          nullable: true
        actionName:
          type: string
          nullable: true
        authorizationStrategies:
          type: array
          items:
            $ref: '#/components/schemas/resourceClaimAuthorizationStrategy'
          nullable: true
      additionalProperties: false
    resourceClaimAction:
      title: ResourceClaimAction
      required:
        - enabled
        - name
      type: object
      properties:
        name:
          type: string
          nullable: true
        enabled:
          type: boolean
      additionalProperties: false
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://localhost/adminapi/connect/token
          scopes:
            edfi_admin_api/full_access: Unrestricted access to all Admin API endpoints
security:
  - oauth:
      - api

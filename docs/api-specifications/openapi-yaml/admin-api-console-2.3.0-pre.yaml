openapi: 3.0.1
info:
  title: Admin API Documentation
  description: 'The Ed-Fi Admin API is a REST API-based administrative interface for managing vendors, applications, client credentials, and authorization rules for accessing an Ed-Fi API.'
  version: adminconsole
paths:
  /:
    get:
      tags:
        - Information
      summary: Retrieve API informational metadata
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/informationResult'
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/informationResult'
  /adminconsole/userprofile:
    get:
      tags:
        - Adminconsole
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
    post:
      tags:
        - Adminconsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addUserProfileRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '400':
          description: FeatureConstants.BadRequestResponseDescription
        '201':
          description: Created
  '/adminconsole/userprofile/{tenantId}/{id}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfileModel'
  '/adminconsole/userprofile/{tenantId}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfileModel'
  /adminconsole/tenants:
    get:
      tags:
        - Adminconsole
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
    post:
      tags:
        - Adminconsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addTenantRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '400':
          description: FeatureConstants.BadRequestResponseDescription
        '201':
          description: Created
  '/adminconsole/tenants/{tenantId}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
  /adminconsole/steps:
    get:
      tags:
        - Adminconsole
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
    post:
      tags:
        - Adminconsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addStepRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '400':
          description: FeatureConstants.BadRequestResponseDescription
        '201':
          description: Created
  '/adminconsole/steps/{tenantId}/{id}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stepModel'
  '/adminconsole/steps/{tenantId}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stepModel'
  /adminconsole/permissions:
    get:
      tags:
        - Adminconsole
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
    post:
      tags:
        - Adminconsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addPermissionRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '400':
          description: FeatureConstants.BadRequestResponseDescription
        '201':
          description: Created
  '/adminconsole/permissions/{tenantId}/{id}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/permissionModel'
  '/adminconsole/permissions/{tenantId}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/permissionModel'
  /adminconsole/instances:
    get:
      tags:
        - Adminconsole
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
    post:
      tags:
        - Adminconsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addInstanceRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '400':
          description: FeatureConstants.BadRequestResponseDescription
        '201':
          description: Created
  '/adminconsole/instances/{tenantId}/{id}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/instanceModel'
  '/adminconsole/instances/{tenantId}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/instanceModel'
  /adminconsole/healthcheck:
    get:
      tags:
        - Adminconsole
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
    post:
      tags:
        - Adminconsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addHealthCheckRequest'
        required: true
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '400':
          description: FeatureConstants.BadRequestResponseDescription
        '201':
          description: Created
  '/adminconsole/healthcheck/{tenantId}':
    get:
      tags:
        - Adminconsole
      parameters:
        - name: tenantId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '401':
          description: Unauthorized. The request requires authentication
        '403':
          description: 'Forbidden. The request is authenticated, but not authorized to access this resource'
        '409':
          description: 'Conflict. The request is authenticated, but it has a conflict with an existing element'
        '500':
          description: FeatureConstants.InternalServerErrorResponseDescription
        '404':
          description: Not found. A resource with given identifier could not be found.
  /connect/register:
    post:
      tags:
        - Connect
      summary: Registers new client
      description: Registers new client
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClientId:
                  type: string
                  description: Client id
                ClientSecret:
                  type: string
                  description: Client secret
                DisplayName:
                  type: string
                  description: Client display name
            encoding:
              ClientId:
                style: form
              ClientSecret:
                style: form
              DisplayName:
                style: form
      responses:
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Application registered successfully.
  /connect/token:
    post:
      tags:
        - Connect
      summary: Retrieves bearer token
      description: "\nTo authenticate Swagger requests, execute using \"Authorize\" above, not \"Try It Out\" here."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_id:
                  type: 'string '
                client_secret:
                  type: 'string '
                grant_type:
                  type: 'string '
                scope:
                  type: string
      responses:
        '400':
          description: Bad Request. The request was invalid and cannot be completed. See the response body for details.
        '500':
          description: Internal server error. An unhandled error occurred on the server. See the response body for details.
        '200':
          description: Sign-in successful.
components:
  schemas:
    addHealthCheckRequest:
      title: AddHealthCheckRequest
      type: object
      properties:
        docId:
          type: integer
          format: int32
        instanceId:
          type: integer
          format: int32
        edOrgId:
          type: integer
          format: int32
        tenantId:
          type: integer
          format: int32
        document:
          minLength: 1
          type: string
      additionalProperties: false
    addInstanceRequest:
      type: object
      properties:
        instanceId:
          type: integer
          format: int32
        edOrgId:
          type: integer
          format: int32
          nullable: true
        tenantId:
          type: integer
          format: int32
        document:
          minLength: 1
          type: string
      additionalProperties: false
    addPermissionRequest:
      type: object
      properties:
        instanceId:
          type: integer
          format: int32
        edOrgId:
          type: integer
          format: int32
          nullable: true
        tenantId:
          type: integer
          format: int32
        document:
          minLength: 1
          type: string
      additionalProperties: false
    addStepRequest:
      type: object
      properties:
        instanceId:
          type: integer
          format: int32
        edOrgId:
          type: integer
          format: int32
          nullable: true
        tenantId:
          type: integer
          format: int32
        document:
          minLength: 1
          type: string
      additionalProperties: false
    addTenantRequest:
      type: object
      properties:
        instanceId:
          type: integer
          format: int32
        edOrgId:
          type: integer
          format: int32
        tenantId:
          type: integer
          format: int32
        document:
          minLength: 1
          type: string
      additionalProperties: false
    addUserProfileRequest:
      type: object
      properties:
        instanceId:
          type: integer
          format: int32
        edOrgId:
          type: integer
          format: int32
          nullable: true
        tenantId:
          type: integer
          format: int32
        document:
          minLength: 1
          type: string
      additionalProperties: false
    adminApiError:
      title: AdminApiError
      type: object
      properties:
        title:
          type: string
          nullable: true
          readOnly: true
        errors:
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      description: Wrapper schema for all error responses
    extension:
      type: object
      properties:
        code:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
      additionalProperties: false
    informationResult:
      title: Information
      type: object
      properties:
        version:
          type: string
          description: Application version
        build:
          type: string
          description: Build / release version
      additionalProperties: false
    instanceModel:
      type: object
      properties:
        docId:
          type: integer
          format: int32
        instanceId:
          type: integer
          format: int32
          nullable: true
        tenantId:
          type: integer
          format: int32
          nullable: true
        edOrgId:
          type: integer
          format: int32
          nullable: true
        document:
          type: string
          nullable: true
      additionalProperties: false
    permissionModel:
      type: object
      properties:
        docId:
          type: integer
          format: int32
        instanceId:
          type: integer
          format: int32
          nullable: true
        tenantId:
          type: integer
          format: int32
          nullable: true
        edOrgId:
          type: integer
          format: int32
          nullable: true
        document:
          type: string
          nullable: true
      additionalProperties: false
    preference:
      type: object
      properties:
        code:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    registerClientRequest:
      title: RegisterClientRequest
      type: object
      properties:
        clientId:
          type: string
          description: Client id
        clientSecret:
          type: string
          description: Client secret
        displayName:
          type: string
          description: Client display name
      additionalProperties: false
    selectedTenant:
      type: object
      properties:
        createdBy:
          type: string
          nullable: true
        createdDateTime:
          type: string
          format: date-time
          nullable: true
        domains:
          type: array
          items:
            type: string
          nullable: true
        isDemo:
          type: boolean
          nullable: true
        isIdentityProviders:
          type: array
          items:
            type: string
          nullable: true
        lastModifiedBy:
          type: string
          nullable: true
        lastModifiedDateTime:
          type: string
          format: date-time
          nullable: true
        organizationIdentifier:
          type: string
          nullable: true
        organizationName:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        subscriptions:
          type: array
          items: { }
          nullable: true
        subscriptionsMigrated:
          type: boolean
          nullable: true
        tenantId:
          type: string
          nullable: true
        tenantStatus:
          type: string
          nullable: true
        tenantType:
          type: string
          nullable: true
      additionalProperties: false
    stepModel:
      type: object
      properties:
        number:
          type: integer
          format: int32
          nullable: true
        description:
          type: string
          nullable: true
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    userProfileModel:
      type: object
      properties:
        tenantId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        preferences:
          type: array
          items:
            $ref: '#/components/schemas/preference'
          nullable: true
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/extension'
          nullable: true
        tenants:
          type: array
          items:
            $ref: '#/components/schemas/userProfileTenant'
          nullable: true
        selectedTenant:
          $ref: '#/components/schemas/selectedTenant'
        tenantsTotalCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    userProfileTenant:
      type: object
      properties:
        createdBy:
          type: string
          nullable: true
        createdDateTime:
          type: string
          format: date-time
          nullable: true
        domains:
          type: array
          items:
            type: string
          nullable: true
        isDemo:
          type: boolean
          nullable: true
        isIdentityProviders:
          type: array
          items:
            type: string
          nullable: true
        lastModifiedBy:
          type: string
          nullable: true
        lastModifiedDateTime:
          type: string
          format: date-time
          nullable: true
        organizationIdentifier:
          type: string
          nullable: true
        organizationName:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        subscriptions:
          type: array
          items: { }
          nullable: true
        subscriptionsMigrated:
          type: boolean
          nullable: true
        tenantId:
          type: string
          nullable: true
        tenantStatus:
          type: string
          nullable: true
        tenantType:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://localhost/connect/token
          scopes:
            edfi_admin_api/full_access: Unrestricted access to all Admin API endpoints
security:
  - oauth:
      - api
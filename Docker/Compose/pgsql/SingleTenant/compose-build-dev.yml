# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

services:
  nginx:
    build:
      context: ../../../Settings/gateway/
      dockerfile: Dockerfile
    environment:
      ADMIN_API_VIRTUAL_NAME: "${ADMIN_API_VIRTUAL_NAME:-adminapi}"
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
    ports:
      - "443:443"
      - "80:80"
    container_name: ed-fi-gateway-adminapi
    restart: always
    hostname: nginx
    volumes:
      - ../../../Settings/ssl:/ssl/
    depends_on:
      - adminapi

  adminapi:
    build:
      # Important to set the context to the root, rather than setting it to the
      # EdFi.Ods.AdminApi directory, so that the Dockerfile has access to other
      # C# projects.
      context: ../../../
      additional_contexts:
        assets: ../../../../
      dockerfile: dev.pgsql.Dockerfile
    environment:
      ADMIN_POSTGRES_HOST: pb-admin
      ADMIN_WAIT_POSTGRES_HOSTS: "pb-admin "
      AdminConsoleSettings__CorsSettings__AllowedOrigins: "${ALLOWED_ORIGINS:-https://localhost}"
      AdminConsoleSettings__CorsSettings__EnableCors: "${ENABLE_CORS:-false}"
      AppSettings__DatabaseEngine: "PostgreSql"
      AppSettings__DefaultPageSizeLimit: ${PAGING_LIMIT:-25}
      AppSettings__DefaultPageSizeOffset: ${PAGING_OFFSET:-0}
      AppSettings__EnableAdminConsoleAPI: ${ENABLE_ADMIN_CONSOLE:-true}
      AppSettings__EnableApplicationResetEndpoint: ${ENABLE_APPLICATION_RESET_ENDPOINT:-true} 
      AppSettings__EncryptionKey: "TDMyNH0lJmo7aDRnNXYoSmAwSXQpV09nbitHSWJTKn0="
      AppSettings__IgnoresCertificateErrors: ${IGNORES_CERTIFICATE_ERRORS:-false}
      AppSettings__MultiTenancy: "${MULTITENANCY_ENABLED:-false}"
      AppSettings__PathBase: ${ADMIN_API_VIRTUAL_NAME:-adminapi}
      Authentication__AllowRegistration: true
      Authentication__IssuerUrl: ${ISSUER_URL}
      Authentication__SigningKey: ${SIGNING_KEY}
      ConnectionStrings__EdFi_Admin: "host=pb-admin;port=${PGBOUNCER_LISTEN_PORT:-6432};username=${POSTGRES_USER};password=${POSTGRES_PASSWORD};database=EdFi_Admin;pooling=false"
      ConnectionStrings__EdFi_Security: "host=pb-admin;port=${PGBOUNCER_LISTEN_PORT:-6432};username=${POSTGRES_USER};password=${POSTGRES_PASSWORD};database=EdFi_Security;pooling=false"
      EdFiApiDiscoveryUrl: "${EDFI_API_DISCOVERY_URL:-https://host.docker.internal/api/}"
      EnableDockerEnvironment: true
      IpRateLimiting__EnableEndpointRateLimiting: ${IPRATELIMITING__ENABLEENDPOINTRATELIMITING:-false}
      IpRateLimiting__StackBlockedRequests: ${IPRATELIMITING__STACKBLOCKEDREQUESTS:-false}
      IpRateLimiting__RealIpHeader: ${IPRATELIMITING__REALIPHEADER:-X-Real-IP}
      IpRateLimiting__ClientIdHeader: ${IPRATELIMITING__CLIENTIDHEADER:-X-ClientId}
      IpRateLimiting__HttpStatusCode: ${IPRATELIMITING__HTTPSTATUSCODE:-429}
      IpRateLimiting__IpWhitelist: ${IPRATELIMITING__IPWHITELIST:-[]}
      IpRateLimiting__EndpointWhitelist: ${IPRATELIMITING__ENDPOINTWHITELIST:-[]}
      Log4NetCore__Log4NetConfigFileName: "./log4net.config"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      POSTGRES_USER: "${POSTGRES_USER}"
    entrypoint: ["/bin/sh"]
    command: ["-c","/app/run.sh"]
    depends_on:
      - pb-admin
    restart: always
    hostname: ${ADMIN_API_VIRTUAL_NAME:-adminapi}
    container_name: adminapi
    healthcheck:
      test: ${ADMIN_API_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  db-admin:
    build:
      context: ../../../
      additional_contexts:
        assets: ../../../../
      dockerfile: db.pgsql.admin.Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5880:5432"
    volumes:
      - vol-db-admin-adminapi:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-admin-adminapi

  pb-admin:
    image: pgbouncer/pgbouncer@sha256:aa8a38b7b33e5fe70c679053f97a8e55c74d52b00c195f0880845e52b50ce516 #pgbouncer:1.15.0
    environment:
      DATABASES: "* = host = db-admin port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}"
      PGBOUNCER_LISTEN_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
    ports:
      - "5401:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-admin-adminapi
    depends_on:
      - db-admin

volumes:
  vol-db-admin-adminapi:
    driver: local
    name: vol-db-admin-adminapi
